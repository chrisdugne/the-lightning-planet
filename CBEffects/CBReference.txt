-------------------------------------------------------
CBEffects Parameter Documentation
-------------------------------------------------------

This is the overwhelmingly large .txt file containing all of the parameters you can possibly put in a Data Table for CBEffects.

Includes parameters for CBEffects One, One and One-Fourth, One and One-Half, One and Three-Fourths, One and Four-Fifths, Two, Two and One-Fourth, Two and Two-Fifths, Two and Four-Ninths.

--------------------------------------------------------
--------------------------------------------------------
--------------------------------------------------------
Parameter List for Vents
--------------------------------------------------------
All of the possible parameters for a vent's Data Table.
--------------------------------------------------------

Newest (as of version Two and One-Fourth):
hasColor
iterateAngle
curAngle
divisionDamping


----------------------------
"title"
Type: String
Description: A unique title for the vent, so that you can access it with the “start”, “stop”, “destroy”, and “get” commands.


----------------------------
“x” and “y”
Types: Numbers
Descriptions: X and Y of the vent.


----------------------------
“isActive”
Type: Boolean
Description: Whether the vent starts when startMaster command is called, true means it does start, false means it doesn’t.
Note: Not used very often.


----------------------------
“build”
Type: Function
Description: Function that returns a display object to use as a particle.


----------------------------
“color”
Types: Table, Function
Description (table): Table with nested tables inside of it, each with RGB format.

Description (function): Function that returns anything that can be used as a color.


----------------------------
"iterateColor"
Type: Boolean
Description: Whether colors are chosen randomly from the color table or are iterated through one by one.


----------------------------
"curColor"
Type: Number
Description: The color to start with if iterateColor = true.


----------------------------
"hasColor"
Type: Boolean
Description: Whether to color particles from a vent or not.


----------------------------
“emitDelay”
Type: Number
Description: How long the delay between each emission is.


----------------------------
“perEmit”
Type: Number
Description: How many particles are emitted on each emission.


----------------------------
“emissionNum”
Type: Number
Description: How many times the vent emits particles when started. Set to zero to be infinite.
Note: Do not set both “emissionNum” and “emitDelay” to zero.


----------------------------
"parentGroup"
Type: Table, Corona Display Group
Description: The group that the vent's content group will be inserted into.


----------------------------
“lifeSpan”
Types: Number, Function
Description (number): How long a particle takes to transition to endAlpha and be removed.

Description (function): A function that returns how long the particle takes to transition to endAlpha and be removed.


----------------------------
"contentX" and "contentY"
Types: Numbers
Description: X and Y of the vent's content group.


----------------------------
“alpha”
Type: Number
Description: Alpha the particle will be just before the life transition starts.


----------------------------
 “startAlpha”
Type: Number
Description: Alpha the particle is when it is created.


----------------------------
“endAlpha”
Type: Number
Description: Alpha the particle is when it is removed.


----------------------------
“onCreation”
Type: Function
Description: A function called on creation of each particle. The particle, the parent vent, and the parent vent's "content" group are each function arguments.


----------------------------
"onUpdate"
Type: Function
Description: A function called each time ParticlePhysics updates the position of each particle. Basically a function executed on Runtime. The particle, the parent vent, and the parent vent's "content" group are each function arguments.


----------------------------
“onDeath”
Type: Function
Description: A function called on death of each particle. The particle, the parent vent, and the parent vent's "content" group are each function arguments.


----------------------------
“propertyTable”
Type: Table
Description: A table of values that is copied to each particle. When the particle is built, each parameter in the property table is given to it.


----------------------------
“scale”
Type: Number
Description: A number that pre-defined values of the vent are multiplied by to scale the vent.

Note: It doesn't work very well currently - it's still in progress.


----------------------------
“lifeStart”
Types: Number, Function
Description (number): The delay before the particle begins its life span.

Description: (function): A function that returns the delay before the particle begins its life span.


----------------------------
“fadeInTime”
Type: Number
Description: The time it takes a particle to go from startAlpha to alpha and start the life start/life span transition.


----------------------------
“positionType”
Types: String, Function
Description (string): The way CBEffects positions particles onCreation. 
Possible Values: “inRect”, “inRadius”, “alongLine”, “atPoint”, "fromPointList"

Description (function): A function that returns X and Y values to position the particle on creation. Values must be returned separately.


----------------------------
"pointList"
Type: Table
Description: A table of {x, y} values to choose from if positionType = "fromPointList".


----------------------------
"iteratePoint"
Type: Boolean
Description: Whether to choose randomly from the point list or iterate through them if positionType = "fromPointList".


----------------------------
"curPoint"
Type: Number
Description: The point to start with if iteratePoint = true and positionType = "fromPointList".


----------------------------
“posRadius”
Type: Number
Description: The radius the particles will appear inside of for “inRadius” position type.


----------------------------
“posInner”
Type: Number
Description: The radius the particles will appear outside of for “inRadius” position type.
Note: Must be smaller than posRadius.


----------------------------
“point1” and “point2”
Types: Tables
Description: Tables containing two values, X and Y, so that if the position type is “alongLine” particles will appear along a line drawn from point1 to point2.


----------------------------
"lineDensity"
Type: Number
Description: Number of points on the line drawn from point1 to point2. Defaults to the length from point1 to point2.


----------------------------
“rectLeft”, “rectTop”, “rectWidth”, and “rectHeight”
Types: Numbers
Descriptions: Dimensions of the rectangle particles will appear inside of is “inRect” is the position type.


----------------------------
“physics”
Type: Table
Description: Table that contains the physics properties of the vent. Uses the built-in ParticlePhysics, not Corona’s Box2D physics.


----------------------------
----------------------------

Inside the Physics Table

----------------------------
----------------------------

----------------------------
“linearDamping”
Type: Number
Description: How the velocity of the particle changes. Positive values decay the velocity, negative values grow it.


----------------------------
“density”
Type: Number
Description: How gravity and forces act on a particle. Generally, the lower these are, the faster the particle goes.


----------------------------
“velocity”
Type: Number
Description: How fast the particle moves.


----------------------------
“angularVelocity”
Type: Number
Description: How fast the particle rotates.


----------------------------
“angularDamping”
Type: Number
Description: How the angular velocity of the particle changes. Positive values decay the angular velocity, negative values grow it.


----------------------------
“velFunction”
Type: Function
Description: Returns X and Y velocity for a particle on creation.


----------------------------
“useFunction”
Type: Boolean
Description: Whether to use the velFunction to set velocity (true) or to use the pre-defined angles to set velocity (false).


----------------------------
“autoAngle”
Type: Boolean 
Description: Whether the values in the angle table are single numbers or auto-fill tables.


----------------------------
“angles”
Type: Table
Description: Contains the angles for particles to travel at. 0 is pointing right, and it goes counter-clockwise around - in other words, 90 is straight up, 180 is left, etc. If autoAngle = true then it includes angle high and low bounds, low to high.


----------------------------
"iterateAngle"
Type: Boolean
Description: Whether to go through the angle table one by one or pick randomly from it.


----------------------------
"curAngle"
Type: Number
Description: The angle to start with if iterateAngle = true.


----------------------------
"preCalculate"
Type: Boolean
Description: Whether CBEffects calculates the forces needed for the angles beforehand or not. If set to false, each time a particle is created it performs an equation to see the X and Y velocity it needs to travel in an angle, using more memory - only set it to false if you're going to be changing the vent's velocity and/or angles after creating it.


----------------------------
“sizeX” and “sizeY”
Types: Numbers
Descriptions: How fast the particles grow X and Y scale. Negative values shrink particles.


----------------------------
“minX”, “minY”, “maxX”, “maxY”
Types: Numbers
Descriptions: The minimum and maximum X and Y scale the particles can grow or shrink to.


----------------------------
“gravityX” and “gravityY”
Types: Numbers
Descriptions: The X-gravity and Y-gravity of the vent.


----------------------------
"relativeToSize"
Type: Boolean
Description: Whether the size of the particle affects the way ParticlePhysics moves it.


----------------------------
"divisionDamping"
Type: Boolean
Description: Whether ParticlePhysics divides velocity by damping or subtracts damping from velocity.
Note: When set to the boolean value of "true", set linearDamping, xDamping, or yDamping to zero to keep velocity in that direction constant.



----------------------------
----------------------------

End of the Physics Table

----------------------------
----------------------------

“rotation”
Type: Table
Description: A table containing the rotation data of the vent.


----------------------------
----------------------------

Inside the Rotation Table

----------------------------
----------------------------
“towardVel”
Type: Boolean
Description: Whether the particle points the direction it is going.
Note: If set to true, the towardVel parameter will override angularVelocity and angularDamping.


----------------------------
“offset”
Type: Number
Description: If towardVel is set to true, particles will rotate toward the direction they are going + offset.


----------------------------
----------------------------

End of the Rotation Table

----------------------------
----------------------------


--------------------------------------------------------
--------------------------------------------------------
--------------------------------------------------------
End of the Parameters for Vents
--------------------------------------------------------
--------------------------------------------------------
--------------------------------------------------------


--------------------------------------------------------
--------------------------------------------------------
--------------------------------------------------------
Parameter List for Fields
--------------------------------------------------------
All of the possible parameters for a field's Data Table.
--------------------------------------------------------

----------------------------
“title”
Type: String
Description: A unique title for the field, so that you can access it with the “start”, “stop”, “destroy”, and “get” commands.


----------------------------
“onCollision”
Type: Function
Description: A function that is called when a particle collides with the field. The particle and the field are both arguments.


----------------------------
“x” and “y”
Types: Numbers
Descriptions: The X and Y of the field. If the field’s shape is a rectangle, then it is the top left of the field.


----------------------------
“rectLeft”, “rectTop”, “rectWidth”, and “rectHeight”
Types: Numbers
Descriptions: Dimensions of the rectangle if the collision shape is set to “rect”.


----------------------------
“radius”
Type: Number
Description: Radius of the field if the collision shape is set to “circle”.


----------------------------
“points”
Type: Table
Description: Table containing pairs of coordinates for the polygon if the collision shape is set to “polygon”.


----------------------------
“targetVent”
Type: Special - must be a CBVentGroup’s vent.
Description: A vent that the field will be connected to. Particles from it will be modified or moved. Easiest specified with the “get” function for a CBVentGroup.

IMPORTANT: Without this parameter, errors will occur.

----------------------------
“singleEffect”
Type: Boolean
Description: Whether the particles that collide with the field are then blocked from the onCollision with other fields (or the same one) with singleEffect set to true. If it’s set to false, then the onCollision function will continue to fire until the particle leaves the bounds, even it the particle previously collided with a singleEffect field.
Note: This should be used for vents that start timers on a particle, transitions, color changes, etc. that you want to fire only once.


--------------------------------------------------------
--------------------------------------------------------
--------------------------------------------------------
End of the Parameters for Fields
--------------------------------------------------------
--------------------------------------------------------
--------------------------------------------------------


That's all, folks!